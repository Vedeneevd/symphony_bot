from aiogram import Router, types, F, Bot
from aiogram.types import InputMediaPhoto, InputMediaVideo
from database.crud import search_posts_by_hashtag, increment_hashtag_counter
from database.session import async_session
from sqlalchemy.orm import selectinload

router = Router()


@router.callback_query(F.data.startswith("hashtag:"))
async def show_hashtag_posts(callback: types.CallbackQuery, bot: Bot):
    hashtag = callback.data.split(":")[1]

    async with async_session() as session:
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫
        await increment_hashtag_counter(session, hashtag)

        # –ò—â–µ–º –ø–æ—Å—Ç—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
        posts = await search_posts_by_hashtag(session, hashtag)

        if not posts:
            await callback.message.answer(f"–ü–æ —Ä—É–±—Ä–∏–∫–µ {hashtag} –ø–æ–∫–∞ –Ω–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–π.")
            await callback.answer()
            return

        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã–≤–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤)
        for post in posts:
            if not post.media_files:
                # –ï—Å–ª–∏ –Ω–µ—Ç –º–µ–¥–∏–∞ - –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
                await callback.message.answer(post.text or "üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞")
                continue

            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–µ–¥–∏–∞ –ø–æ —Ç–∏–ø–∞–º –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            media_group = []
            for media in sorted(post.media_files, key=lambda x: x.order_index):
                if media.media_type == 'photo':
                    media_group.append(InputMediaPhoto(
                        media=media.file_id,
                        caption=post.text if not media_group else None
                    ))
                elif media.media_type == 'video':
                    media_group.append(InputMediaVideo(
                        media=media.file_id,
                        caption=post.text if not media_group else None
                    ))
                # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –º–µ–¥–∏–∞

            try:
                if len(media_group) > 1:
                    # –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –∞–ª—å–±–æ–º
                    await bot.send_media_group(
                        chat_id=callback.message.chat.id,
                        media=media_group
                    )
                else:
                    # –ï—Å–ª–∏ –æ–¥–Ω–æ –º–µ–¥–∏–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ
                    media = media_group[0]
                    if isinstance(media, InputMediaPhoto):
                        await bot.send_photo(
                            chat_id=callback.message.chat.id,
                            photo=media.media,
                            caption=media.caption
                        )
                    elif isinstance(media, InputMediaVideo):
                        await bot.send_video(
                            chat_id=callback.message.chat.id,
                            video=media.media,
                            caption=media.caption
                        )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞: {e}")
                await callback.message.answer(post.text or "üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞")

        await callback.answer()